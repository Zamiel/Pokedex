$spacer: 1rem;
$spacer-x: $spacer;
$spacer-y: $spacer;
$spacers: (
        0: (x: 0, y: 0),
        h: (x: ($spacer-x * 0.5), y: ($spacer-y * 0.5)),
        1: (x: $spacer-x, y: $spacer-y),
        2: (x: ($spacer-x * 1.5), y: ($spacer-y * 1.5)),
        3: (x: ($spacer-x * 3), y: ($spacer-y * 3)),
        4: (x: ($spacer-x * 4), y: ($spacer-y * 4))
);
$sizes: (
        0: (ratio: 0%),
        25: (ratio: 25%),
        33: (ratio: 33%),
        50: (ratio: 50%),
        66: (ratio: 66%),
        75: (ratio: 75%),
        100: (ratio: 100%)
);

@mixin sizing() {
  @each $prop, $abbrev in (width: w, height: h) {
    @each $size, $obj in $sizes {
      $ratio: map-get($obj, 'ratio');
      #{$abbrev}-#{$size} {
        #{$prop}: $ratio !important;
      }
    }
  }
}

@mixin spacing() {
  @each $prop, $abbrev in (margin: m, padding: p) {
    @each $size, $lengths in $spacers {
      $length-x: map-get($lengths, x);
      $length-y: map-get($lengths, y);

      .#{$abbrev}-#{$size} {
        #{$prop}: $length-y $length-x !important;
      }
      .#{$abbrev}t-#{$size} {
        #{$prop}-top: $length-y !important;
      }
      .#{$abbrev}r-#{$size} {
        #{$prop}-right: $length-x !important;
      }
      .#{$abbrev}b-#{$size} {
        #{$prop}-bottom: $length-y !important;
      }
      .#{$abbrev}l-#{$size} {
        #{$prop}-left: $length-x !important;
      }
      .#{$abbrev}x-#{$size} {
        #{$prop}-left: $length-x !important;
        #{$prop}-right: $length-x !important;
      }
      .#{$abbrev}y-#{$size} {
        #{$prop}-top: $length-y !important;
        #{$prop}-bottom: $length-y !important;
      }
    }
  }
}

@include sizing();
@include spacing();
